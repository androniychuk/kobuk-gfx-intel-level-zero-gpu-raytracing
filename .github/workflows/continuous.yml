## Copyright 2022 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

name: continuous

on: [push, workflow_dispatch]

jobs:

  linux-ze_raytracing:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@devel
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-internal.env
      artifact-out: linux-ze_raytracing
      artifact-path: ./build
      cmd: |
        source $DPCPP_ROOT/startup.sh
        mkdir build
        cd build
        cmake -G Ninja -D CMAKE_CXX_COMPILER=clang++ -D CMAKE_C_COMPILER=clang ..
        cmake --build . --target package

  linux-ze_raytracing-test-DG2:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@devel
    needs: ["linux-ze_raytracing"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-internal.env
      artifact-in: linux-ze_raytracing
      cmd: |
        cd build
        ctest
         
  windows-ze_raytracing:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@devel
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-windows-internal.env
      artifact-path: ./build
      artifact-out: windows-ze_raytracing
      shell: cmd
      cmd: |
        call %DPCPP_ROOT%\\startup.bat
        mkdir build
        cd build
        cmake -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_COMPILER=clang++ -D CMAKE_C_COMPILER=clang ..
        cmake --build . --target package
        ctest

  success:
    runs-on: ubuntu-latest
    needs:
      - linux-ze_raytracing
      - linux-ze_raytracing-test-DG2
      - windows-ze_raytracing
    if: failure() || cancelled()
    steps:
      - name: Failure
        run: |
          echo "::notice title=Success::Workflow failed"
          exit 1

